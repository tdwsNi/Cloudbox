---
- name: "Get {{user}} uid"
  shell: "id -u {{user}}"
  register: uid

- name: "Get {{user}} gid"
  shell: "id -g {{user}}"
  register: gid

- name: "Unarchive rclone v{{rclone.version}}"
  unarchive:
    src: https://github.com/ncw/rclone/releases/download/v{{ rclone.version }}/rclone-v{{ rclone.version }}-linux-amd64.zip
    dest: /tmp
    copy: no
    validate_certs: no

- name: Ensure rclone folders exists
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=true"
  with_items:
    - /opt/rclone
    - "/home/{{user}}/.config/rclone"

- name: Copy binary to /opt/rclone
  copy:
    src: "/tmp/rclone-v{{ rclone.version }}-linux-amd64/rclone"
    dest: /opt/rclone/rclone
    mode: 0777
    owner: "{{user}}"
    group: "{{user}}"

- name: Symlink binary to /usr/sbin
  file:
    src: /opt/rclone/rclone
    dest: /usr/sbin/rclone
    state: link
    force: yes

- name: Make dir for local manpages
  file:
    path: '/usr/local/share/man/man1'
    state: directory
    mode: 0775
    owner: root
    group: root

- name: Copy manpage
  copy:
    src: "/tmp/rclone-v{{ rclone.version }}-linux-amd64/rclone.1"
    dest: /usr/local/share/man/man1/rclone.1
    mode: 0644
    owner: root
    group: root

- name: Install manpage
  shell: mandb
  changed_when: false

- name: Check rclone.conf exists
  stat:
    path: "/home/{{user}}/.config/rclone/rclone.conf"
  register: rclone_conf

- name: Symlink config
  file:
    src: /opt/rclone/rclone.conf
    dest: "/home/{{user}}/.config/rclone/rclone.conf"
    owner: "{{user}}"
    group: "{{user}}"
    state: link
    force: yes
  when: rclone_conf.stat.exists == False

- name: Check service exists
  stat:
    path: "/etc/systemd/system/rclone.service"
  register: rclone_service

- name: Stop existing rclone service
  systemd: state=stopped name=plexdrive
  when: rclone_service.stat.exists

- name: Import rclone.service
  template:
    src: rclone.service.js2
    dest: /etc/systemd/system/rclone.service
    force: yes
  when: rclone_service.stat.exists == False

- name: Systemd daemon-reload
  systemd: state=stopped name=rclone daemon_reload=yes enabled=no

- name: Check restore rclone.conf exists
  stat:
    path: "{{playbook_dir}}/rclone.conf"
  register: restore_rclone_conf

- name: Restore rclone.conf as part of restore process
  copy:
    src: "{{playbook_dir}}/rclone.conf"
    dest: /opt/rclone/rclone.conf
    mode: 0775
    owner: "{{user}}"
    group: "{{user}}"
  when: restore_rclone_conf.stat.exists

- name: Remove restored rclone.conf
  file:
    path: "{{playbook_dir}}/rclone.conf"
    state: absent
  when: restore_rclone_conf.stat.exists

- name: Start rclone service
  systemd: state=started name=rclone enabled=yes
  when: restore_rclone_conf.stat.exists
